import matplotlib.pyplot as plt

def plot_graph(df_all, df_burning, df_coasting, file_prefix):
    start_time = df_burning.iloc[0]["Time [s]"]
    end_time = df_coasting.iloc[-1]["Time [s]"]

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["AirDensity [kg/m3]"], color='orangered')
    plt.plot(df_coasting["Time [s]"], df_coasting["AirDensity [kg/m3]"], color='royalblue')
    plt.xlabel("Time [s]")
    plt.ylabel("Air Density [kg/m3]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    # plt.legend()
    plt.savefig(file_prefix + "_air_density.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["AirPressure [kPa]"], color='orangered')
    plt.plot(df_coasting["Time [s]"], df_coasting["AirPressure [kPa]"], color='royalblue')
    plt.xlabel("Time [s]")
    plt.ylabel("AirPressure [kPa]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    # plt.legend()
    plt.savefig(file_prefix + "_air_pressure.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["AirTemprature [K]"], color='orangered')
    plt.plot(df_coasting["Time [s]"], df_coasting["AirTemprature [K]"], color='royalblue')
    plt.xlabel("Time [s]")
    plt.ylabel("AirTemprature [K]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    # plt.legend()
    plt.savefig(file_prefix + "_air_temperature.png")
    plt.close()

    plt.figure()
    plt.plot(df_all["Time [s]"], df_all["Propellant Mass [kg]"], color='orangered', linestyle='dashed', label='Propellant')
    plt.plot(df_all["Time [s]"], df_all["Mass [kg]"], color='royalblue', linestyle='solid', label='ALL')
    plt.xlabel("Time [s]")
    plt.ylabel("Mass [kg]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_mass.png")
    plt.close()

    plt.figure()
    plt.plot(df_all["Time [s]"], df_all["X-C.G. [%]"], color='orangered', linestyle='dashed', label='X-C.G.')
    plt.plot(df_all["Time [s]"], df_all["X-C.P. [%]"], color='royalblue', linestyle='solid', label='X-C.P.')
    plt.xlabel("Time [s]")
    plt.ylabel("from Body Tail [%]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_xcg_xcp.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["StaticMargin [%]"], color='orangered')
    plt.plot(df_coasting["Time [s]"], df_coasting["StaticMargin [%]"], color='royalblue')
    plt.xlabel("Time [s]")
    plt.ylabel("StaticMargin [%]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    # plt.legend()
    plt.savefig(file_prefix + "_static_margin.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["AoA [deg]"], color='orangered', linestyle='solid', label='AoA-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["AoA [deg]"], color='royalblue', linestyle='solid', label='AoA-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["AoS [deg]"], color='orangered', linestyle='dashed', label='AoS-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["AoS [deg]"], color='royalblue', linestyle='dashed', label='AoS-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("AoA/AoS [deg]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_angle_aoa_aos.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Fx-aero [N]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fx-aero [N]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fy-aero [N]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fy-aero [N]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fz-aero [N]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fz-aero [N]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Aerodynamics Force [N]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_force_aero.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Fx-thrust [N]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fx-thrust [N]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fy-thrust [N]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fy-thrust [N]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fz-thrust [N]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fz-thrust [N]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Thrust Force [N]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_force_thrust.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Fx-gravity [N]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fx-gravity [N]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fy-gravity [N]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fy-gravity [N]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fz-gravity [N]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fz-gravity [N]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Gravity Force [N]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_force_gravity.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Fx-aero [N]"], color='orangered', linestyle='solid', label='Aero-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fx-aero [N]"], color='royalblue', linestyle='solid', label='Aero-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fx-thrust [N]"], color='orangered', linestyle='dashed', label='Thrust-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fx-thrust [N]"], color='royalblue', linestyle='dashed', label='Thrust-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fx-gravity [N]"], color='orangered', linestyle='dashdot', label='Gravity-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fx-gravity [N]"], color='royalblue', linestyle='dashdot', label='Gravity-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Body X-Axis Force [N]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_force_body_x-axis.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Fy-aero [N]"], color='orangered', linestyle='solid', label='Aero-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fy-aero [N]"], color='royalblue', linestyle='solid', label='Aero-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fy-thrust [N]"], color='orangered', linestyle='dashed', label='Thrust-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fy-thrust [N]"], color='royalblue', linestyle='dashed', label='Thrust-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fy-gravity [N]"], color='orangered', linestyle='dashdot', label='Gravity-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fy-gravity [N]"], color='royalblue', linestyle='dashdot', label='Gravity-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Body Y-Axis Force [N]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_force_body_y-axis.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Fz-aero [N]"], color='orangered', linestyle='solid', label='Aero-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fz-aero [N]"], color='royalblue', linestyle='solid', label='Aero-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fz-thrust [N]"], color='orangered', linestyle='dashed', label='Thrust-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fz-thrust [N]"], color='royalblue', linestyle='dashed', label='Thrust-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Fz-gravity [N]"], color='orangered', linestyle='dashdot', label='Gravity-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Fz-gravity [N]"], color='royalblue', linestyle='dashdot', label='Gravity-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Body Z-Axis Force [N]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_force_body_z-axis.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Accx-body [m/s2]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Accx-body [m/s2]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Accy-body [m/s2]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Accy-body [m/s2]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Accz-body [m/s2]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Accz-body [m/s2]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Body Acceleration [m/s2]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_acc_body.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Gccx-body [G]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Gccx-body [G]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Gccy-body [G]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Gccy-body [G]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Gccz-body [G]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Gccz-body [G]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Body Acceleration [G]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_acc_body_G.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Vx-body [m/s]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Vx-body [m/s]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Vy-body [m/s]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Vy-body [m/s]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Vz-body [m/s]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Vz-body [m/s]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Body Velocity [m/s]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_vel_body.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["MachNumber [-]"], color='orangered')
    plt.plot(df_coasting["Time [s]"], df_coasting["MachNumber [-]"], color='royalblue')
    plt.xlabel("Time [s]")
    plt.ylabel("Mach Number [-]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    # plt.legend()
    plt.savefig(file_prefix + "_vel_mach_number.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["DynamicPressure [kPa]"], color='orangered')
    plt.plot(df_coasting["Time [s]"], df_coasting["DynamicPressure [kPa]"], color='royalblue')
    plt.xlabel("Time [s]")
    plt.ylabel("DynamicPressure [kPa]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    # plt.legend()
    plt.savefig(file_prefix + "_dynamic_pressure.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Vx-NED [m/s]"], color='orangered', linestyle='solid', label='North-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Vx-NED [m/s]"], color='royalblue', linestyle='solid', label='North-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Vy-NED [m/s]"], color='orangered', linestyle='dashed', label='East-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Vy-NED [m/s]"], color='royalblue', linestyle='dashed', label='East-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Vz-NED [m/s]"], color='orangered', linestyle='dashdot', label='Down-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Vz-NED [m/s]"], color='royalblue', linestyle='dashdot', label='Down-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("NED Velocity [m/s]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_vel_NED.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["X-ECEF [km]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["X-ECEF [km]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Y-ECEF [km]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Y-ECEF [km]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Z-ECEF [km]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Z-ECEF [km]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("ECEF Postion [km]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_pos_ECEF.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Longitude [deg]"], df_burning["Latitude [deg]"], color='orangered')
    plt.plot(df_coasting["Longitude [deg]"], df_coasting["Latitude [deg]"], color='royalblue')
    plt.xlabel("Longitude [deg]")
    plt.ylabel("Latitude [deg]")
    # plt.ylim(top=, bottom=)
    # plt.xlim(start_time, end_time)
    plt.grid()
    # plt.legend()
    plt.savefig(file_prefix + "_pos_lat_lon.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Altitude [m]"], color='orangered')
    plt.plot(df_coasting["Time [s]"], df_coasting["Altitude [m]"], color='royalblue')
    plt.xlabel("Time [s]")
    plt.ylabel("Altitude [m]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    # plt.legend()
    plt.savefig(file_prefix + "_pos_altitude.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Downrange [m]"], df_burning["Altitude [m]"], color='orangered')
    plt.plot(df_coasting["Downrange [m]"], df_coasting["Altitude [m]"], color='royalblue')
    plt.xlabel("Downrange [m]")
    plt.ylabel("Altitude [m]")
    # plt.ylim(top=, bottom=)
    plt.xlim(left=0)
    plt.grid()
    # plt.legend()
    plt.savefig(file_prefix + "_pos_trajectory.png")
    plt.close()


    # ############################################

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Mx-thrust [Nm]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mx-thrust [Nm]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["My-thrust [Nm]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["My-thrust [Nm]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Mz-thrust [Nm]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mz-thrust [Nm]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Thrust Moment [Nm]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_moment_thrust.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Mx-aero [Nm]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mx-aero [Nm]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["My-aero [Nm]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["My-aero [Nm]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Mz-aero [Nm]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mz-aero [Nm]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Aerodynamics Moment [Nm]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_moment_aero.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Mx-aerodump [Nm]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mx-aerodump [Nm]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["My-aerodump [Nm]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["My-aerodump [Nm]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Mz-aerodump [Nm]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mz-aerodump [Nm]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Aerodynamics Dumping Moment [Nm]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_moment_aero_dumping.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Mx-jetdump [Nm]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mx-jetdump [Nm]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["My-jetdump [Nm]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["My-jetdump [Nm]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Mz-jetdump [Nm]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mz-jetdump [Nm]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Jet Dumping Moment [Nm]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_moment_jet_dumping.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Mx-gyroeffect [Nm]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mx-gyroeffect [Nm]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["My-gyroeffect [Nm]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["My-gyroeffect [Nm]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Mz-gyroeffect [Nm]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mz-gyroeffect [Nm]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Gyro Effect Moment [Nm]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_moment_gyro_effect.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Mx-thrust [Nm]"], color='orangered', linestyle='dashed', label='Thrust-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mx-thrust [Nm]"], color='royalblue', linestyle='dashed', label='Thrust-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Mx-aero [Nm]"], color='orangered', linestyle='solid', label='Aero-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mx-aero [Nm]"], color='royalblue', linestyle='solid', label='Aero-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Mx-aerodump [Nm]"], color='orangered', linestyle='dashdot', label='AeroDump-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mx-aerodump [Nm]"], color='royalblue', linestyle='dashdot', label='AeroDump-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Mx-jetdump [Nm]"], color='orangered', linestyle='dotted', label='JetDump-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mx-jetdump [Nm]"], color='royalblue', linestyle='dotted', label='JetDump-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Body X-Axis Moment [Nm]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_moment_body_x-axis.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["My-thrust [Nm]"], color='orangered', linestyle='dashed', label='Thrust-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["My-thrust [Nm]"], color='royalblue', linestyle='dashed', label='Thrust-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["My-aero [Nm]"], color='orangered', linestyle='solid', label='Aero-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["My-aero [Nm]"], color='royalblue', linestyle='solid', label='Aero-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["My-aerodump [Nm]"], color='orangered', linestyle='dashdot', label='AeroDump-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["My-aerodump [Nm]"], color='royalblue', linestyle='dashdot', label='AeroDump-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["My-jetdump [Nm]"], color='orangered', linestyle='dotted', label='JetDump-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["My-jetdump [Nm]"], color='royalblue', linestyle='dotted', label='JetDump-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Body Y-Axis Moment [Nm]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_moment_body_y-axis.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Mz-thrust [Nm]"], color='orangered', linestyle='dashed', label='Thrust-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mz-thrust [Nm]"], color='royalblue', linestyle='dashed', label='Thrust-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Mz-aero [Nm]"], color='orangered', linestyle='solid', label='Aero-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mz-aero [Nm]"], color='royalblue', linestyle='solid', label='Aero-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Mz-aerodump [Nm]"], color='orangered', linestyle='dashdot', label='AeroDump-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mz-aerodump [Nm]"], color='royalblue', linestyle='dashdot', label='AeroDump-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Mz-jetdump [Nm]"], color='orangered', linestyle='dotted', label='JetDump-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Mz-jetdump [Nm]"], color='royalblue', linestyle='dotted', label='JetDump-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Body Z-Axis Moment [Nm]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_moment_body_z-axis.png")
    plt.close()

    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["AngleVelx [deg/s]"], color='orangered', linestyle='solid', label='X-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["AngleVelx [deg/s]"], color='royalblue', linestyle='solid', label='X-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["AngleVely [deg/s]"], color='orangered', linestyle='dashed', label='Y-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["AngleVely [deg/s]"], color='royalblue', linestyle='dashed', label='Y-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["AngleVelz [deg/s]"], color='orangered', linestyle='dashdot', label='Z-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["AngleVelz [deg/s]"], color='royalblue', linestyle='dashdot', label='Z-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Angle Velocity [deg/s]")
    # plt.ylim(top=, bottom=)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_angel_vel.png")
    plt.close()




    plt.figure()
    plt.plot(df_burning["Time [s]"], df_burning["Azimuth [deg]"], color='orangered', linestyle='dashed', label='Azi-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Azimuth [deg]"], color='royalblue', linestyle='dashed', label='Azi-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Elvation [deg]"], color='orangered', linestyle='solid', label='Elv-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Elvation [deg]"], color='royalblue', linestyle='solid', label='Elv-coasting')
    plt.plot(df_burning["Time [s]"], df_burning["Roll [deg]"], color='orangered', linestyle='dashdot', label='Roll-burning')
    plt.plot(df_coasting["Time [s]"], df_coasting["Roll [deg]"], color='royalblue', linestyle='dashdot', label='Roll-coasting')
    plt.xlabel("Time [s]")
    plt.ylabel("Attitude [deg]")
    plt.ylim(top=180, bottom=-180)
    plt.xlim(start_time, end_time)
    plt.grid()
    plt.legend()
    plt.savefig(file_prefix + "_angle_attitude.png")
    plt.close()

  

    # plt.figure()
    # plt.plot(df_burning["Time [s]"], df_burning[], color='orangered')
    # plt.plot(df_coasting["Time [s]"], df_coasting[], color='royalblue')
    # plt.xlabel("Time [s]")
    # plt.ylabel(" []")
    # # plt.ylim(top=, bottom=)
    # plt.xlim(start_time, end_time)
    # plt.grid()
    # plt.legend()
    # plt.savefig(file_prefix + "_.png")
    # plt.close()
    
